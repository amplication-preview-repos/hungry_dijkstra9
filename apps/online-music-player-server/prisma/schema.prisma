datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Playlist {
  createdAt   DateTime @default(now())
  description String?
  id          String   @id @default(cuid())
  name        String?
  tracks      Track[]
  updatedAt   DateTime @updatedAt
  user        User?    @relation(fields: [userId], references: [id])
  userId      String?
}

model Subscription {
  createdAt DateTime                   @default(now())
  endDate   DateTime?
  id        String                     @id @default(cuid())
  startDate DateTime?
  typeField EnumSubscriptionTypeField?
  updatedAt DateTime                   @updatedAt
  user      User?                      @relation(fields: [userId], references: [id])
  userId    String?
}

model Track {
  album      String?
  artist     String?
  createdAt  DateTime  @default(now())
  duration   Int?
  genre      String?
  id         String    @id @default(cuid())
  playlist   Playlist? @relation(fields: [playlistId], references: [id])
  playlistId String?
  title      String?
  updatedAt  DateTime  @updatedAt
  url        String?
  user       User?     @relation(fields: [userId], references: [id])
  userId     String?
}

model Ad {
  content    String?
  createdAt  DateTime @default(now())
  duration   Int?
  id         String   @id @default(cuid())
  name       String?
  updatedAt  DateTime @updatedAt
  voiceAdUrl String?
}

model User {
  createdAt     DateTime       @default(now())
  email         String?        @unique
  firstName     String?
  id            String         @id @default(cuid())
  lastName      String?
  password      String
  playlists     Playlist[]
  roles         Json
  subscriptions Subscription[]
  tracks        Track[]
  updatedAt     DateTime       @updatedAt
  username      String         @unique
}

enum EnumSubscriptionTypeField {
  Option1
}
